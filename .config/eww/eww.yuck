(include "./powermenu.yuck")


(defwindow topbar
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :width "99%"
    :anchor "top center")
    :stacking "bottom"
    :exclusive true
    :focusable false
    :namespace "eww"
  (box 
    :class "bar"
    (workspaces)
    (clock)
    (box
      :space-evenly false
      :spacing 7
      :halign "end"
      (wifi)
      (audio)
      (mem)
      (cpu)
      (battery)
    )
  ) 
)


(defvar wifi-interface "wlan0")


(defwidget wifi []
  (eventbox
    :onclick "nm-connection-editor &"
    :cursor "pointer"
    (image :image-height 20 :halign "end" :valign "center" :path "${EWW_CONFIG_DIR}/assets/wifi.svg")
  )
)

(defpoll muted :interval "1s" "pamixer --get-mute")
(defwidget audio [] 
  (eventbox
      :onclick "pamixer --toggle-mute"
      :cursor "pointer"
      (image :image-height 20 :halign "end" :valign "center" :path "${EWW_CONFIG_DIR}/assets/${muted == "true" ? "sound-off.svg" : "sound-on.svg"}")
  )
)

(defwidget mem []
  (box
    :space-evenly false
    (image :image-height 20 :halign "end" :valign "center" :path "${EWW_CONFIG_DIR}/assets/mem.svg")
    (bar :value "${EWW_RAM.used_mem / EWW_RAM.total_mem * 100}")
  )
)

(defwidget cpu []
  (box
    :space-evenly false
    (image :image-height 20 :halign "end" :valign "center" :path "${EWW_CONFIG_DIR}/assets/cpu.svg")
    (bar :value "${EWW_CPU["avg"]}")
  )
)

(defwidget battery []
  (box
       :valign "center"
       :halign "end"
       :space-evenly false

    (image :image-height 20 :halign "end" :valign "center" :path "${EWW_CONFIG_DIR}/assets/${EWW_BATTERY["BAT0"].status == "Discharging" ? "battery.svg" : "bolt.svg"}")
    (bar :value "${EWW_BATTERY["BAT0"].capacity}")
  )
)

(defvar barScalar 1.4)

(defwidget bar [value]
  (box
    :class "ml-2"
    :space-evenly false
    (box
      :height 8
      :width "${round(value / barScalar, 0)}"
      :valign "center"
      :halign "end"
      :class "powerbar-full"
    )
    (box
      :height 8
      :width "${round((100-value) / barScalar, 0) }"
      :valign "center"
      :halign "start"
      :class "powerbar-empty bg-gray"
    )
  )
)

(defwidget powerbutton []
  (eventbox
    :halign "end"
    :valign "center"
    :class "button text-color-yellow"
    :cursor "pointer"
    :width 30
    :height 30
    :onclick `eww open powermenu --screen 0`
    (label :text "ðŸ—²")
  )
)

(defvar workspaces "[1,2,3,4,5,6,7,8,9,10]")
(deflisten activeworkspace
           :initial 1
           `./utils/bin/hyprland_socket_listener workspace`
)

(defwidget workspaces [] 
  (box :halign "start"
       :valign "center"
       :class "foo"
       :space-evenly true
    (for workspace in workspaces
      (box
        :valign "center"
        :halign "center"
        :class "workspace-indicator ${activeworkspace == workspace ? "active" : ""}"
      )
    )
  )
)

(defwidget clock []
  (box 
    :orientation "horizontal"
    :halign "center"
    :class "foo"
    (label
      :class "clock_time"
      :text {formattime(EWW_TIME, "%H:%M")}
    )
  )
)

